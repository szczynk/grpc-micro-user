{
  "swagger": "2.0",
  "info": {
    "title": "Auth API",
    "version": "0.0.1"
  },
  "tags": [
    {
      "name": "AuthService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/forgot-password": {
      "post": {
        "summary": "Send Reset Password Token",
        "description": "Use this API to send reset password token by user email",
        "operationId": "AuthService_ForgotPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbForgotPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbForgotPasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Use this API to login user and get access token \u0026 refresh token",
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Use this API to register a new user",
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRegisterRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/reset-password/{resetToken}": {
      "post": {
        "summary": "Reset Password",
        "description": "Use this API to reset password",
        "operationId": "AuthService_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                }
              },
              "title": "ResetPassword"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/auth/verify-email/{code}": {
      "get": {
        "summary": "Verify User Email",
        "description": "Use this API to verify user email",
        "operationId": "AuthService_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    }
  },
  "definitions": {
    "pbForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "title": "ForgotPassword"
    },
    "pbForgotPasswordResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "pbLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Login"
    },
    "pbLoginResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbRegisterRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Register"
    },
    "pbRegisterResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
